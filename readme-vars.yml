---

# project information
project_name: zotero
project_url: "https://www.zotero.org/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/zotero-icon.png"
project_blurb: "[Zotero]({{ project_url }}) is a free, easy-to-use tool to help you collect, organize, annotate, cite, and share research."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/config", desc: "Users home directory in the container, stores local files and settings" }
param_usage_include_ports: true
param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "Zotero gui." }
  - { external_port: "3001", internal_port: "3001", port_desc: "HTTPS Zotero gui." }
custom_params:
  - { name: "shm-size", name_compose: "shm_size", value: "1gb",desc: "This is needed for Chromium to function properly." }
opt_security_opt_param: true
opt_security_opt_param_vars:
  - { run_var: "seccomp=unconfined", compose_var: "seccomp:unconfined", desc: "For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker. Chromium runs in no-sandbox mode without it." }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The application can be accessed at:

  * http://yourhost:3000/
  * https://yourhost:3001/

  ### Options in all KasmVNC based GUI containers

  This container is based on [Docker Baseimage KasmVNC](https://github.com/linuxserver/docker-baseimage-kasmvnc) which means there are additional environment variables and run configurations to enable or disable specific functionality.

  #### Optional environment variables

  | Variable | Description |
  | :----: | --- |
  | CUSTOM_PORT | Internal port the container listens on for http if it needs to be swapped from the default 3000. |
  | CUSTOM_HTTPS_PORT | Internal port the container listens on for https if it needs to be swapped from the default 3001. |
  | CUSTOM_USER | HTTP Basic auth username, abc is default. |
  | PASSWORD | HTTP Basic auth password, abc is default. If unset there will be no auth |
  | SUBFOLDER | Subfolder for the application if running a subfolder reverse proxy, need both slashes IE `/subfolder/` |
  | TITLE | The page title displayed on the web browser, default "KasmVNC Client". |
  | FM_HOME | This is the home directory (landing) for the file manager, default "/config". |
  | START_DOCKER | If set to false a container with privilege will not automatically start the DinD Docker setup. |
  | DRINODE | If mounting in /dev/dri for [DRI3 GPU Acceleration](https://www.kasmweb.com/kasmvnc/docs/master/gpu_acceleration.html) allows you to specify the device to use IE `/dev/dri/renderD128` |

  #### Optional run configurations

  | Variable | Description |
  | :----: | --- |
  | `--privileged` | Will start a Docker in Docker (DinD) setup inside the container to use docker in an isolated environment. For increased performance mount the Docker directory inside the container to the host IE `-v /home/user/docker-data:/var/lib/docker`. |
  | `-v /var/run/docker.sock:/var/run/docker.sock` | Mount in the host level Docker socket to either interact with it via CLI or use Docker enabled applications. |
  | `--device /dev/dri:/dev/dri` | Mount a GPU into the container, this can be used in conjunction with the `DRINODE` environment variable to leverage a host video card for GPU accelerated appplications. Only **Open Source** drivers are supported IE (Intel,AMDGPU,Radeon,ATI,Nouveau) |

  ### Lossless mode

  This container is capable of delivering a true lossless image at a high framerate to your web browser by changing the Stream Quality preset to "Lossless", more information [here](https://www.kasmweb.com/docs/latest/how_to/lossless.html#technical-background). In order to use this mode from a non localhost endpoint the HTTPS port on 3001 needs to be used. If using a reverse proxy to port 3000 specific headers will need to be set as outlined [here](https://github.com/linuxserver/docker-baseimage-kasmvnc#lossless).

# changelog
changelogs:
  - { date: "31.01.24:", desc: "Initial release." }
